  - name: "Download/Extract the Elasticsearch Tarball"
    unarchive:
      src: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ es_version }}.tar.gz"
      dest: "{{ elasticsearch_base_path }}"
      remote_src: yes

  - name: "Create group {{ es_service_group }}"
    # This is a security need -- running as dedicated user and group to 
    # safegaurd against any arbitrary code execution or filesystem access 
    # exploits.  And also cats.
    group:
      name: "{{ es_service_group }}"
      state: present
      
  - name: "Create user {{ es_service_user }}"
    user:
      name: "{{ es_service_user }}"
        # Important.  Prevents ability to log in remotely as the service 
        # account.  Password is also not set to further ensure that doesn't 
        # happen.  Existing accounts with proper sudoer permissions excepted.
      shell: "/bin/nologin"
      group: "{{ es_service_group }}"

  - name: "Install systemd environment file"
    template: src=../templates/elasticsearch/systemd_environment_file.jinja2 dest={{ es_environment_file }} force=yes

  - name: "Install elasticsearch configuration"
    template: src=../templates/elasticsearch/configuration.yml.jinja2 dest={{ es_conf_dir }}/elasticsearch.yml force=yes

    # set the permissions on the directory
  - name: "Set ownership of {{ es_home_dir }} recursively to {{ es_service_user }}:{{ es_service_group }}"
    file: dest="{{ es_home_dir }}" owner="{{ es_service_user }}" group="{{ es_service_group }}" recurse=yes

  - name: "Create logs dir"
    file:
      path: "{{ es_logs_dir }}"
      state: directory
      owner: elasticsearch
      group: elasticsearch

  - name: "Create the pid dir"
    file:
      path: "{{ es_pid_dir }}"
      state: directory
      owner: elasticsearch
      group: elasticsearch

  - name: "Place systemd system unit target"
    # Need to do this outside of the systemd module so we can use a template
    template: src=../templates/elasticsearch/systemd_unit.service.jinja2 dest=/etc/systemd/system/elasticsearch.service force=yes
  - name: "Enable systemd system unit target"
    systemd:
        name: "elasticsearch"
        enabled: yes
        masked: no
        state: stopped
        daemon_reload: yes

  # This is for the apache socket handling and routing
  - name: "Install Reverse ProxyPass VirtualHost for ElasticSearch"
    template: src=../templates/apache2/elasticsearch_httpd.conf.jinja2 dest=/etc/apache2/sites-available/elasticsearch.conf force=yes

  # This is for the apache socket handling and routing
  - name: "Enabling the ProxyPass for ElasticSearch Apache VHost"
    command: a2ensite elasticsearch

  # restart when done
  - name: "Restart the ElasticSearch Service"
    systemd:
      name: "elasticsearch"
      enabled: yes
      masked: no
      state: restarted

  # restart when done
  - name: "Restart the Apache Service"
    systemd:
      name: "apache2"
      enabled: yes
      masked: no
      state: restarted
