  - name: "Download/Extract the Filebeat Tarball"
    unarchive:
      src: "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{{ ES_VERSION }}-linux-x86_64.tar.gz"
      dest: "{{ filebeat_base_path }}"
      remote_src: yes

  - name: "Fix Filebeat Path"
    # thanks, ansible
    command: /bin/sh -c 'rm -Rf {{ FB_PATH }}; sleep 1; mv -f {{ filebeat_base_path }}/filebeat-{{ ES_VERSION }}* {{ FB_PATH }}'

  - name: "Create group {{ FB_GRP }}"
    # This is a security need -- running as dedicated user and group to 
    # safegaurd against any arbitrary code execution or filesystem access 
    # exploits.  And also cats.
    group:
      name: "{{ FB_GRP }}"
      state: present

  - name: "Create user {{ FB_USR }}"
    user:
      name: "{{ FB_USR }}"
        # Important.  Prevents ability to log in remotely as the service 
        # account.  Password is also not set to further ensure that doesn't 
        # happen.  Existing accounts with proper sudoer permissions excepted.
        # Logs can be accessed with facls if necessary to allow an approval process
        # after risk analysis.
      shell: "/bin/nologin"
      group: "{{ FB_GRP }}"

  - name: "Install filebeat configuration"
    template: src=../templates/filebeat.yml.jinja2 dest=/{{ FB_CONF }} force=yes 

    # set the permissions on the directory
  - name: "Set ownership of {{ FB_HOME }} recursively to {{ FB_USR }}:{{ FB_GRP }}"
    file: dest={{ FB_HOME }} owner={{ FB_USR }} group={{ FB_GRP }} recurse=yes

  - name: "Create the pid dir"
    file:
      path: "{{ FB_PID_PATH }}"
      state: directory

  - name: "Place systemd system unit target"
    # Need to do this outside of the systemd module so we can use a template
    template: src=../templates/filebeat.service.jinja2 dest=/etc/systemd/system/filebeat.service force=yes
  - name: "Enable systemd system unit target"
    systemd:
        name: "filebeat"
        enabled: yes
        masked: no
        state: restarted
        daemon_reload: yes

  # remove when done
  - name: "Reload/Restart the Apache Service"
    systemd:
      name: "apache2"
      enabled: yes
      masked: no
      state: restarted



