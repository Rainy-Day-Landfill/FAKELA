# rendered on {{ template_run_date }}
# Built by -C, but mostly stolen shamelessly from:
# 	https://github.com/elastic/elasticsearch/blob/master/distribution/src/main/packaging/systemd/elasticsearch.service
# Using upstream sources to ease distribution packaging later -- also 
# gives more control over where things go and how they go.

# updated
[Unit]
Description=Elasticsearch
Documentation=http://www.elastic.co
Wants=network-online.target
After=network-online.target

[Service]
RuntimeDirectory=elasticsearch
Environment=ES_HOME={{ es_home_dir }}
Environment=ES_PATH_CONF={{ es_conf_dir }}
Environment=PID_DIR={{ es_pid_dir }}
EnvironmentFile={{ es_environment_file }}

WorkingDirectory={{ es_home_dir }}

User={{ es_service_user }}
Group={{ es_service_group }}

ExecStart={{ es_home_dir }}/bin/elasticsearch -p {{ es_pid_dir }}/elasticsearch.pid --quiet

# StandardOutput is configured to redirect to journalctl since
# some error messages may be logged in standard output before
# elasticsearch logging system is initialized. Elasticsearch
# stores its logs in /var/log/elasticsearch and does not use
# journalctl by default. If you also want to enable journalctl
# logging, you can simply remove the "quiet" option from ExecStart.
StandardOutput=journal
StandardError=inherit

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Specifies the maximum number of processes
LimitNPROC=4096

# Specifies the maximum size of virtual memory
LimitAS=infinity

# Specifies the maximum file size
LimitFSIZE=infinity

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop the Java process
KillSignal=SIGTERM

# Send the signal only to the JVM rather than its control group
KillMode=process

# Java process is never killed
SendSIGKILL=no

# When a JVM receives a SIGTERM signal it exits with code 143
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target


